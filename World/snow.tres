[gd_resource type="ShaderMaterial" load_steps=18 format=2]

[sub_resource type="VisualShaderNodeTextureUniform" id=10]
uniform_name = "texture"

[sub_resource type="VisualShaderNodeVectorOp" id=11]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 2, 2, 2 ) ]
operator = 2

[sub_resource type="Gradient" id=12]
colors = PoolColorArray( 0.445312, 0.445312, 0.445312, 1, 1, 1, 1, 1 )

[sub_resource type="GradientTexture" id=13]
gradient = SubResource( 12 )

[sub_resource type="VisualShaderNodeTexture" id=14]
texture = SubResource( 13 )

[sub_resource type="VisualShaderNodeVectorOp" id=15]
operator = 2

[sub_resource type="OpenSimplexNoise" id=16]
period = 42.5
persistence = 0.542

[sub_resource type="NoiseTexture" id=17]
noise = SubResource( 16 )

[sub_resource type="VisualShaderNodeTexture" id=18]
texture = SubResource( 17 )

[sub_resource type="VisualShaderNodeTexture" id=19]
texture = SubResource( 13 )

[sub_resource type="VisualShaderNodeTextureUniform" id=24]
uniform_name = "heightmap"

[sub_resource type="VisualShaderNodeVectorOp" id=25]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0, 1, 0 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=26]

[sub_resource type="VisualShaderNodeInput" id=27]
input_name = "vertex"

[sub_resource type="VisualShader" id=20]
code = "shader_type spatial;
render_mode specular_schlick_ggx, async_visible;

uniform sampler2D heightmap;
uniform sampler2D texture;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_7;
uniform sampler2D tex_frg_8;



void vertex() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(heightmap, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// VectorOp:3
	vec3 n_in3p1 = vec3(0.00000, 1.00000, 0.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// Input:5
	vec3 n_out5p0 = VERTEX;

// VectorOp:4
	vec3 n_out4p0 = n_out3p0 + n_out5p0;

// Output:0
	VERTEX = n_out4p0;

}

void fragment() {
// TextureUniform:2
	vec3 n_out2p0;
	float n_out2p1;
	{
		vec4 n_tex_read = texture(texture, UV.xy);
		n_out2p0 = n_tex_read.rgb;
		n_out2p1 = n_tex_read.a;
	}

// VectorOp:3
	vec3 n_in3p1 = vec3(2.00000, 2.00000, 2.00000);
	vec3 n_out3p0 = n_out2p0 * n_in3p1;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, n_out3p0.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Texture:7
	vec4 tex_frg_7_read = texture(tex_frg_7, UV.xy);
	vec3 n_out7p0 = tex_frg_7_read.rgb;
	float n_out7p1 = tex_frg_7_read.a;

// Texture:8
	vec4 tex_frg_8_read = texture(tex_frg_8, n_out7p0.xy);
	vec3 n_out8p0 = tex_frg_8_read.rgb;
	float n_out8p1 = tex_frg_8_read.a;

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out8p0;

// Output:0
	ALBEDO = n_out5p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -543.654, 361.721 )
nodes/vertex/0/position = Vector2( 320, 160 )
nodes/vertex/2/node = SubResource( 24 )
nodes/vertex/2/position = Vector2( -260, 140 )
nodes/vertex/3/node = SubResource( 25 )
nodes/vertex/3/position = Vector2( -40, 160 )
nodes/vertex/4/node = SubResource( 26 )
nodes/vertex/4/position = Vector2( 140, 180 )
nodes/vertex/5/node = SubResource( 27 )
nodes/vertex/5/position = Vector2( -40, 280 )
nodes/vertex/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 5, 0, 4, 1, 4, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 500, 140 )
nodes/fragment/2/node = SubResource( 10 )
nodes/fragment/2/position = Vector2( -300, 180 )
nodes/fragment/3/node = SubResource( 11 )
nodes/fragment/3/position = Vector2( -60, 260 )
nodes/fragment/4/node = SubResource( 14 )
nodes/fragment/4/position = Vector2( 120, 200 )
nodes/fragment/5/node = SubResource( 15 )
nodes/fragment/5/position = Vector2( 300, 380 )
nodes/fragment/7/node = SubResource( 18 )
nodes/fragment/7/position = Vector2( -100, 400 )
nodes/fragment/8/node = SubResource( 19 )
nodes/fragment/8/position = Vector2( 120, 420 )
nodes/fragment/connections = PoolIntArray( 2, 0, 3, 0, 3, 0, 4, 0, 4, 0, 5, 0, 5, 0, 0, 0, 7, 0, 8, 0, 8, 0, 5, 1 )

[sub_resource type="ViewportTexture" id=28]
viewport_path = NodePath("Snow/Viewport")

[sub_resource type="ViewportTexture" id=23]
viewport_path = NodePath("Snow/Viewport")

[resource]
resource_local_to_scene = true
shader = SubResource( 20 )
shader_param/heightmap = SubResource( 28 )
shader_param/texture = SubResource( 23 )
